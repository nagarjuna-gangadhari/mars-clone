# Generated by Django 4.2.7 on 2023-11-17 13:39

import accounts.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=128)),
                ('city', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('INTERNAL EXTERNAL', models.IntegerField(blank=True, null=True, verbose_name='Type')),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='profile',
            name='dob',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='education',
            field=models.IntegerField(blank=True, choices=[(1, 'Phd'), (2, 'Post Graduation'), (3, 'Under Graduation'), (4, 'Diploma'), (5, 'High School'), (100, 'Others')], null=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='linkedIn',
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='pincode',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='step',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='profile',
            name='terms',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='gender',
            field=models.IntegerField(choices=[(1, 'Male'), (2, 'Female'), (100, 'Others')], default=100),
        ),
        migrations.AlterField(
            model_name='profile',
            name='phone',
            field=models.TextField(blank=True, max_length=12, null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='profession',
            field=models.IntegerField(blank=True, choices=[(1, 'Self Employed'), (2, 'Home Maker'), (3, 'Agriculture'), (4, 'Medical'), (5, 'Law'), (6, 'Engineering'), (7, 'Service'), (8, 'Psu'), (9, 'Student'), (10, 'Teaching'), (100, 'Others')], null=True),
        ),
        migrations.AlterField(
            model_name='profile',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='referer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'Username Exists.'}, help_text='Required, User id only.', max_length=12, unique=True, validators=[accounts.validators.UnicodeUsernameIdValidator()], verbose_name='username'),
        ),
        migrations.CreateModel(
            name='UserRoleMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('RECOMMENDED NOT_RECOMMENDED', models.IntegerField(blank=True, null=True, verbose_name='Status')),
                ('status', models.IntegerField(choices=[(1, 'Scheduled'), (2, 'Assaigned'), (3, 'Completed'), (100, 'Cancelled')], default=1)),
                ('panel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='panel_member', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.role')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRoleMaping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(choices=[(1, 'Opted'), (2, 'Post Discussion'), (3, 'Scheduled'), (4, 'In Review'), (5, 'Recommended'), (100, 'Rejected')], default=1)),
                ('meetingLink', models.CharField(blank=True, max_length=256, null=True)),
                ('recommendedOn', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=256, null=True)),
                ('active', models.BooleanField(default=False)),
                ('combo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.userrolemaping')),
                ('meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.userrolemeeting')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_maping', to='accounts.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_map_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoleHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_history', to='accounts.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='location', to='accounts.location'),
        ),
    ]
